// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_GEN_VERSION != 30001
#error This file was generated by a different version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class V2PAssetLog;
@class V2PData;
@class V2PGift;
@class V2PGratuity;
@class V2PPosition;
@class V2PResult;
@class V2PReward;
@class V2PServerBean;
@class V2PUser;
@class V2PUserState;
@class V2PVideo;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum V2PPacket_type

///枚举。包类型
typedef GPB_ENUM(V2PPacket_type) {
  /// Value used if any message's field encounters a value that is not defined
  /// by this enum. The message will also have C functions to get/set the rawValue
  /// of the field.
  V2PPacket_type_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  ///信令类型
  V2PPacket_type_Iq = 0,

  ///消息类型
  V2PPacket_type_Msg = 1,

  ///流媒体文件类型
  V2PPacket_type_Buffer = 2,

  ///心跳包
  V2PPacket_type_Beat = 3,
};

GPBEnumDescriptor *V2PPacket_type_EnumDescriptor(void);

/// Checks to see if the given value is defined by the enum or was not known at
/// the time this source was generated.
BOOL V2PPacket_type_IsValidValue(int32_t value);

#pragma mark - Enum V2PGratuity_Answer

///枚举。响应结果
typedef GPB_ENUM(V2PGratuity_Answer) {
  /// Value used if any message's field encounters a value that is not defined
  /// by this enum. The message will also have C functions to get/set the rawValue
  /// of the field.
  V2PGratuity_Answer_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  ///收到信息
  V2PGratuity_Answer_Receive = 0,

  ///接受
  V2PGratuity_Answer_Accept = 1,

  ///拒绝
  V2PGratuity_Answer_Refuse = 2,

  ///取消
  V2PGratuity_Answer_Cancel = 3,
};

GPBEnumDescriptor *V2PGratuity_Answer_EnumDescriptor(void);

/// Checks to see if the given value is defined by the enum or was not known at
/// the time this source was generated.
BOOL V2PGratuity_Answer_IsValidValue(int32_t value);

#pragma mark - Enum V2PReward_Operate

///枚举。操作类型
typedef GPB_ENUM(V2PReward_Operate) {
  /// Value used if any message's field encounters a value that is not defined
  /// by this enum. The message will also have C functions to get/set the rawValue
  /// of the field.
  V2PReward_Operate_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  ///发布悬赏
  V2PReward_Operate_Release = 0,

  ///取消悬赏
  V2PReward_Operate_Cancle = 1,

  ///支付
  V2PReward_Operate_Pay = 2,

  ///接受
  V2PReward_Operate_Answer = 3,

  ///申诉
  V2PReward_Operate_Appeal = 4,
};

GPBEnumDescriptor *V2PReward_Operate_EnumDescriptor(void);

/// Checks to see if the given value is defined by the enum or was not known at
/// the time this source was generated.
BOOL V2PReward_Operate_IsValidValue(int32_t value);

#pragma mark - Enum V2PUserState_State

///枚举。用户状态
typedef GPB_ENUM(V2PUserState_State) {
  /// Value used if any message's field encounters a value that is not defined
  /// by this enum. The message will also have C functions to get/set the rawValue
  /// of the field.
  V2PUserState_State_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  ///在线
  V2PUserState_State_Online = 0,

  ///离线
  V2PUserState_State_Offline = 1,

  ///视频通话中
  V2PUserState_State_P2PVideo = 2,

  ///多人视频中
  V2PUserState_State_MultiVideo = 3,

  ///其他状态
  V2PUserState_State_Other = 4,
};

GPBEnumDescriptor *V2PUserState_State_EnumDescriptor(void);

/// Checks to see if the given value is defined by the enum or was not known at
/// the time this source was generated.
BOOL V2PUserState_State_IsValidValue(int32_t value);

#pragma mark - Enum V2PAssetLog_OperateType

///枚举。查询类型
typedef GPB_ENUM(V2PAssetLog_OperateType) {
  /// Value used if any message's field encounters a value that is not defined
  /// by this enum. The message will also have C functions to get/set the rawValue
  /// of the field.
  V2PAssetLog_OperateType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  ///充值
  V2PAssetLog_OperateType_Recharge = 0,

  ///提现
  V2PAssetLog_OperateType_Cash = 1,

  ///打赏
  V2PAssetLog_OperateType_Gratuity = 2,

  ///悬赏
  V2PAssetLog_OperateType_Reward = 3,

  ///所有
  V2PAssetLog_OperateType_All = 4,

  ///入账
  V2PAssetLog_OperateType_Income = 5,

  ///出账
  V2PAssetLog_OperateType_Payout = 6,
};

GPBEnumDescriptor *V2PAssetLog_OperateType_EnumDescriptor(void);

/// Checks to see if the given value is defined by the enum or was not known at
/// the time this source was generated.
BOOL V2PAssetLog_OperateType_IsValidValue(int32_t value);

#pragma mark - V2PMessageRoot

/// Exposes the extension registry for this file.
///
/// The base class provides:
/// @code
///   + (GPBExtensionRegistry *)extensionRegistry;
/// @endcode
/// which is a @c GPBExtensionRegistry that includes all the extensions defined by
/// this file and all files that it depends on.
@interface V2PMessageRoot : GPBRootObject
@end

#pragma mark - V2PPacket

typedef GPB_ENUM(V2PPacket_FieldNumber) {
  V2PPacket_FieldNumber_PacketType = 1,
  V2PPacket_FieldNumber_From = 2,
  V2PPacket_FieldNumber_To = 3,
  V2PPacket_FieldNumber_Id_p = 4,
  V2PPacket_FieldNumber_Method = 5,
  V2PPacket_FieldNumber_OperateType = 6,
  V2PPacket_FieldNumber_Result = 7,
  V2PPacket_FieldNumber_Data_p = 8,
  V2PPacket_FieldNumber_Version = 9,
};

///协议主体类
@interface V2PPacket : GPBMessage

///包类型：枚举
@property(nonatomic, readwrite) V2PPacket_type packetType;

///发送者
@property(nonatomic, readwrite, copy, null_resettable) NSString *from;

///接收者
@property(nonatomic, readwrite, copy, null_resettable) NSString *to;

///包ID
@property(nonatomic, readwrite, copy, null_resettable) NSString *id_p;

///方法名
@property(nonatomic, readwrite, copy, null_resettable) NSString *method;

///操作类型
@property(nonatomic, readwrite, copy, null_resettable) NSString *operateType;

///操作结果，是否成功，失败原因
@property(nonatomic, readwrite, strong, null_resettable) V2PResult *result;
/// Test to see if @c result has been set.
@property(nonatomic, readwrite) BOOL hasResult;

///包含的数据
@property(nonatomic, readwrite, strong, null_resettable) V2PData *data_p;
/// Test to see if @c data_p has been set.
@property(nonatomic, readwrite) BOOL hasData_p;

///版本号iq类型包必填
@property(nonatomic, readwrite, copy, null_resettable) NSString *version;

@end

/// Fetches the raw value of a @c V2PPacket's @c packetType property, even
/// if the value was not defined by the enum at the time the code was generated.
int32_t V2PPacket_PacketType_RawValue(V2PPacket *message);
/// Sets the raw value of an @c V2PPacket's @c packetType property, allowing
/// it to be set to a value that was not defined by the enum at the time the code
/// was generated.
void SetV2PPacket_PacketType_RawValue(V2PPacket *message, int32_t value);

#pragma mark - V2PResult

typedef GPB_ENUM(V2PResult_FieldNumber) {
  V2PResult_FieldNumber_Result = 1,
  V2PResult_FieldNumber_Error = 2,
};

///操作结果类
@interface V2PResult : GPBMessage

///是否成功
@property(nonatomic, readwrite) BOOL result;

///错误信息
@property(nonatomic, readwrite, copy, null_resettable) NSString *error;

@end

#pragma mark - V2PData

typedef GPB_ENUM(V2PData_FieldNumber) {
  V2PData_FieldNumber_Normal = 1,
  V2PData_FieldNumber_ByteDate = 2,
  V2PData_FieldNumber_FromTime = 3,
  V2PData_FieldNumber_ToTime = 4,
  V2PData_FieldNumber_Sum = 5,
  V2PData_FieldNumber_From = 6,
  V2PData_FieldNumber_To = 7,
  V2PData_FieldNumber_PositionArray = 8,
  V2PData_FieldNumber_UserArray = 9,
  V2PData_FieldNumber_VideoArray = 10,
  V2PData_FieldNumber_GratuityArray = 11,
  V2PData_FieldNumber_RewardArray = 12,
  V2PData_FieldNumber_UserStateArray = 13,
  V2PData_FieldNumber_AssetLogArray = 14,
  V2PData_FieldNumber_ServerBeanArray = 15,
};

///数据类
@interface V2PData : GPBMessage

///通用数据
@property(nonatomic, readwrite, copy, null_resettable) NSString *normal;

///二进制数据
@property(nonatomic, readwrite, copy, null_resettable) NSData *byteDate;

///筛选数据的起始时间
@property(nonatomic, readwrite) int64_t fromTime;

///筛选数据的截止时间
@property(nonatomic, readwrite) int64_t toTime;

///数据的总量
@property(nonatomic, readwrite) int32_t sum;

///当前传送数据的起始位置
@property(nonatomic, readwrite) int32_t from;

///当前传送数据的结束位置
@property(nonatomic, readwrite) int32_t to;

///（可重复）位置类
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<V2PPosition*> *positionArray;
/// The number of items in @c positionArray without causing the array to be created.
@property(nonatomic, readonly) NSUInteger positionArray_Count;

///（可重复）用户类
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<V2PUser*> *userArray;
/// The number of items in @c userArray without causing the array to be created.
@property(nonatomic, readonly) NSUInteger userArray_Count;

///（可重复）直播视频类
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<V2PVideo*> *videoArray;
/// The number of items in @c videoArray without causing the array to be created.
@property(nonatomic, readonly) NSUInteger videoArray_Count;

///（可重复）打赏类
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<V2PGratuity*> *gratuityArray;
/// The number of items in @c gratuityArray without causing the array to be created.
@property(nonatomic, readonly) NSUInteger gratuityArray_Count;

///（可重复）悬赏类
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<V2PReward*> *rewardArray;
/// The number of items in @c rewardArray without causing the array to be created.
@property(nonatomic, readonly) NSUInteger rewardArray_Count;

///（可重复）用户状态
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<V2PUserState*> *userStateArray;
/// The number of items in @c userStateArray without causing the array to be created.
@property(nonatomic, readonly) NSUInteger userStateArray_Count;

///（可重复）资金变动的日志类 ServerList
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<V2PAssetLog*> *assetLogArray;
/// The number of items in @c assetLogArray without causing the array to be created.
@property(nonatomic, readonly) NSUInteger assetLogArray_Count;

///（可重复）当前可用的服务器列表
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<V2PServerBean*> *serverBeanArray;
/// The number of items in @c serverBeanArray without causing the array to be created.
@property(nonatomic, readonly) NSUInteger serverBeanArray_Count;

@end

#pragma mark - V2PUser

typedef GPB_ENUM(V2PUser_FieldNumber) {
  V2PUser_FieldNumber_Id_p = 1,
  V2PUser_FieldNumber_Phone = 2,
  V2PUser_FieldNumber_Name = 3,
  V2PUser_FieldNumber_Pwd = 4,
  V2PUser_FieldNumber_Pwd2OrCode = 5,
  V2PUser_FieldNumber_RealName = 6,
  V2PUser_FieldNumber_Headurl = 7,
  V2PUser_FieldNumber_SignText = 8,
  V2PUser_FieldNumber_Sex = 9,
  V2PUser_FieldNumber_Address = 10,
  V2PUser_FieldNumber_Experience = 11,
  V2PUser_FieldNumber_FansCount = 12,
  V2PUser_FieldNumber_FollowCount = 13,
  V2PUser_FieldNumber_Position = 14,
  V2PUser_FieldNumber_DeviceId = 15,
  V2PUser_FieldNumber_FollowType = 16,
  V2PUser_FieldNumber_DescName = 17,
  V2PUser_FieldNumber_V2Id = 18,
  V2PUser_FieldNumber_V2UserName = 19,
  V2PUser_FieldNumber_V2Pwd = 20,
  V2PUser_FieldNumber_VideoCount = 21,
  V2PUser_FieldNumber_V2DeviceId1 = 22,
  V2PUser_FieldNumber_V2DeviceId2 = 23,
};

///用户类
@interface V2PUser : GPBMessage

///用户ID
@property(nonatomic, readwrite) int32_t id_p;

///电话号码
@property(nonatomic, readwrite, copy, null_resettable) NSString *phone;

///用户名/昵称
@property(nonatomic, readwrite, copy, null_resettable) NSString *name;

///用户密码
@property(nonatomic, readwrite, copy, null_resettable) NSString *pwd;

///新密码或者验证码
@property(nonatomic, readwrite, copy, null_resettable) NSString *pwd2OrCode;

///用户真实姓名
@property(nonatomic, readwrite, copy, null_resettable) NSString *realName;

///用户头像地址
@property(nonatomic, readwrite, copy, null_resettable) NSString *headurl;

///个性化签名
@property(nonatomic, readwrite, copy, null_resettable) NSString *signText;

///性别
@property(nonatomic, readwrite) int32_t sex;

///注册地址
@property(nonatomic, readwrite, copy, null_resettable) NSString *address;

///用户经验值
@property(nonatomic, readwrite) int32_t experience;

///粉丝数量
@property(nonatomic, readwrite) int32_t fansCount;

///关注的用户数量
@property(nonatomic, readwrite) int32_t followCount;

///用户所在的位置
@property(nonatomic, readwrite, strong, null_resettable) V2PPosition *position;
/// Test to see if @c position has been set.
@property(nonatomic, readwrite) BOOL hasPosition;

///登陆所用的设备ID
@property(nonatomic, readwrite, copy, null_resettable) NSString *deviceId;

///关注（其他用户）的类型
@property(nonatomic, readwrite) int32_t followType;

///备注名称
@property(nonatomic, readwrite, copy, null_resettable) NSString *descName;

///会议系统用户ID
@property(nonatomic, readwrite, copy, null_resettable) NSString *v2Id;

///会议系统用户名
@property(nonatomic, readwrite, copy, null_resettable) NSString *v2UserName;

///会议系统用户密码
@property(nonatomic, readwrite, copy, null_resettable) NSString *v2Pwd;

///用户发布的直播总量
@property(nonatomic, readwrite) int32_t videoCount;

///前置摄像头ID
@property(nonatomic, readwrite, copy, null_resettable) NSString *v2DeviceId1;

///后置摄像头ID
@property(nonatomic, readwrite, copy, null_resettable) NSString *v2DeviceId2;

@end

#pragma mark - V2PPosition

typedef GPB_ENUM(V2PPosition_FieldNumber) {
  V2PPosition_FieldNumber_Longitude = 1,
  V2PPosition_FieldNumber_Latitude = 2,
  V2PPosition_FieldNumber_Radius = 3,
};

///位置类
@interface V2PPosition : GPBMessage

///地图经度
@property(nonatomic, readwrite) double longitude;

///地图维度
@property(nonatomic, readwrite) double latitude;

///查询半径,以米为单位
@property(nonatomic, readwrite) int32_t radius;

@end

#pragma mark - V2PVideo

typedef GPB_ENUM(V2PVideo_FieldNumber) {
  V2PVideo_FieldNumber_Id_p = 1,
  V2PVideo_FieldNumber_VideoNum = 2,
  V2PVideo_FieldNumber_UserId = 3,
  V2PVideo_FieldNumber_Position = 4,
  V2PVideo_FieldNumber_Sum = 5,
  V2PVideo_FieldNumber_UserCount = 6,
  V2PVideo_FieldNumber_LikeCount = 7,
  V2PVideo_FieldNumber_GratuityCount = 8,
  V2PVideo_FieldNumber_Degree = 9,
  V2PVideo_FieldNumber_ResultType = 10,
  V2PVideo_FieldNumber_Hlsmode = 11,
  V2PVideo_FieldNumber_VideoPwd = 12,
};

///直播视频类
@interface V2PVideo : GPBMessage

///直播的ID
@property(nonatomic, readwrite) int32_t id_p;

///直播的会议号
@property(nonatomic, readwrite, copy, null_resettable) NSString *videoNum;

///发起直播的用户ID
@property(nonatomic, readwrite) int32_t userId;

///该直播所在的位置
@property(nonatomic, readwrite, strong, null_resettable) V2PPosition *position;
/// Test to see if @c position has been set.
@property(nonatomic, readwrite) BOOL hasPosition;

///当前观看该直播的总人数
@property(nonatomic, readwrite) int32_t sum;

///累计观看人次
@property(nonatomic, readwrite) int32_t userCount;

///当前的点赞数
@property(nonatomic, readwrite) int32_t likeCount;

///当前直播的打赏总额
@property(nonatomic, readwrite) float gratuityCount;

///与该用户的相关度，排序依据
@property(nonatomic, readwrite) int32_t degree;

///结果类型：0搜索内容；1推荐内容
@property(nonatomic, readwrite) int32_t resultType;

///是否为HLS格式
@property(nonatomic, readwrite) BOOL hlsmode;

///直播的密码，默认为null
@property(nonatomic, readwrite, copy, null_resettable) NSString *videoPwd;

@end

#pragma mark - V2PGratuity

typedef GPB_ENUM(V2PGratuity_FieldNumber) {
  V2PGratuity_FieldNumber_GiftType = 1,
  V2PGratuity_FieldNumber_ToUserId = 2,
  V2PGratuity_FieldNumber_FromUserId = 3,
  V2PGratuity_FieldNumber_Amount = 4,
  V2PGratuity_FieldNumber_SumOrRemain = 5,
  V2PGratuity_FieldNumber_Answer = 6,
  V2PGratuity_FieldNumber_VideoId = 7,
};

///打赏类
@interface V2PGratuity : GPBMessage

///打赏物的类型
@property(nonatomic, readwrite) int32_t giftType;

///打赏的对象
@property(nonatomic, readwrite) int32_t toUserId;

///发起打赏的用户
@property(nonatomic, readwrite) int32_t fromUserId;

///打赏金额
@property(nonatomic, readwrite) float amount;

///累计打赏总额或者打赏后的剩余金额
@property(nonatomic, readwrite) float sumOrRemain;

///枚举类。响应结果
@property(nonatomic, readwrite) V2PGratuity_Answer answer;

///打赏行为发生的那个直播
@property(nonatomic, readwrite) int32_t videoId;

@end

/// Fetches the raw value of a @c V2PGratuity's @c answer property, even
/// if the value was not defined by the enum at the time the code was generated.
int32_t V2PGratuity_Answer_RawValue(V2PGratuity *message);
/// Sets the raw value of an @c V2PGratuity's @c answer property, allowing
/// it to be set to a value that was not defined by the enum at the time the code
/// was generated.
void SetV2PGratuity_Answer_RawValue(V2PGratuity *message, int32_t value);

#pragma mark - V2PReward

typedef GPB_ENUM(V2PReward_FieldNumber) {
  V2PReward_FieldNumber_Id_p = 1,
  V2PReward_FieldNumber_PowerTime = 2,
  V2PReward_FieldNumber_ReleaseTime = 3,
  V2PReward_FieldNumber_GiftArray = 4,
  V2PReward_FieldNumber_FromUserId = 5,
  V2PReward_FieldNumber_AnswerUserId = 6,
  V2PReward_FieldNumber_Operate = 7,
  V2PReward_FieldNumber_Desc = 8,
  V2PReward_FieldNumber_Position = 9,
  V2PReward_FieldNumber_PushSum = 10,
  V2PReward_FieldNumber_AppealDesc = 11,
  V2PReward_FieldNumber_AppealTime = 12,
};

///悬赏类
@interface V2PReward : GPBMessage

///此次悬赏的数据库ID
@property(nonatomic, readwrite) int32_t id_p;

///悬赏的有效时间
@property(nonatomic, readwrite) int32_t powerTime;

///悬赏的开始时间
@property(nonatomic, readwrite) int64_t releaseTime;

///悬赏的物品及数量，可以是多种
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<V2PGift*> *giftArray;
/// The number of items in @c giftArray without causing the array to be created.
@property(nonatomic, readonly) NSUInteger giftArray_Count;

///发起悬赏用户的ID
@property(nonatomic, readwrite) int32_t fromUserId;

///接受悬赏用户的ID
@property(nonatomic, readwrite) int32_t answerUserId;

///枚举类。操作类型
@property(nonatomic, readwrite) V2PReward_Operate operate;

///文字描述
@property(nonatomic, readwrite, copy, null_resettable) NSString *desc;

///位置信息
@property(nonatomic, readwrite, strong, null_resettable) V2PPosition *position;
/// Test to see if @c position has been set.
@property(nonatomic, readwrite) BOOL hasPosition;

///推送的用户数量
@property(nonatomic, readwrite) int32_t pushSum;

///申诉的内容
@property(nonatomic, readwrite, copy, null_resettable) NSString *appealDesc;

///申诉的时间
@property(nonatomic, readwrite) int64_t appealTime;

@end

/// Fetches the raw value of a @c V2PReward's @c operate property, even
/// if the value was not defined by the enum at the time the code was generated.
int32_t V2PReward_Operate_RawValue(V2PReward *message);
/// Sets the raw value of an @c V2PReward's @c operate property, allowing
/// it to be set to a value that was not defined by the enum at the time the code
/// was generated.
void SetV2PReward_Operate_RawValue(V2PReward *message, int32_t value);

#pragma mark - V2PGift

typedef GPB_ENUM(V2PGift_FieldNumber) {
  V2PGift_FieldNumber_GiftType = 1,
  V2PGift_FieldNumber_Amount = 2,
  V2PGift_FieldNumber_SumOrRemain = 3,
};

///礼物类
@interface V2PGift : GPBMessage

///类别
@property(nonatomic, readwrite) int32_t giftType;

///数量
@property(nonatomic, readwrite) float amount;

///悬赏/打赏量，或者剩余量
@property(nonatomic, readwrite) float sumOrRemain;

@end

#pragma mark - V2PUserState

typedef GPB_ENUM(V2PUserState_FieldNumber) {
  V2PUserState_FieldNumber_UserId = 1,
  V2PUserState_FieldNumber_OperateId = 2,
  V2PUserState_FieldNumber_State = 3,
  V2PUserState_FieldNumber_Desc = 4,
};

///用户状态通报类
@interface V2PUserState : GPBMessage

///用户ID
@property(nonatomic, readwrite) int32_t userId;

///操作ID（悬赏或者其他ID）
@property(nonatomic, readwrite) int32_t operateId;

///当前状态
@property(nonatomic, readwrite) V2PUserState_State state;

///说明（报告原由）
@property(nonatomic, readwrite, copy, null_resettable) NSString *desc;

@end

/// Fetches the raw value of a @c V2PUserState's @c state property, even
/// if the value was not defined by the enum at the time the code was generated.
int32_t V2PUserState_State_RawValue(V2PUserState *message);
/// Sets the raw value of an @c V2PUserState's @c state property, allowing
/// it to be set to a value that was not defined by the enum at the time the code
/// was generated.
void SetV2PUserState_State_RawValue(V2PUserState *message, int32_t value);

#pragma mark - V2PAssetLog

typedef GPB_ENUM(V2PAssetLog_FieldNumber) {
  V2PAssetLog_FieldNumber_FromUserId = 1,
  V2PAssetLog_FieldNumber_ToUserId = 2,
  V2PAssetLog_FieldNumber_GiftArray = 3,
  V2PAssetLog_FieldNumber_Desc = 4,
  V2PAssetLog_FieldNumber_OperateType = 5,
  V2PAssetLog_FieldNumber_OperateTime = 6,
  V2PAssetLog_FieldNumber_SoType = 7,
  V2PAssetLog_FieldNumber_PayType = 8,
  V2PAssetLog_FieldNumber_PayTime = 9,
  V2PAssetLog_FieldNumber_VideoId = 10,
  V2PAssetLog_FieldNumber_RewardId = 11,
  V2PAssetLog_FieldNumber_AppealDesc = 12,
  V2PAssetLog_FieldNumber_AppealTime = 13,
};

///资金变动的日志类
@interface V2PAssetLog : GPBMessage

///资金流出的用户ID
@property(nonatomic, readwrite) int32_t fromUserId;

///资金流入的用户ID
@property(nonatomic, readwrite) int32_t toUserId;

///（可重复）涉及的资产类
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<V2PGift*> *giftArray;
/// The number of items in @c giftArray without causing the array to be created.
@property(nonatomic, readonly) NSUInteger giftArray_Count;

///文本说明
@property(nonatomic, readwrite, copy, null_resettable) NSString *desc;

///枚举，查询类型
@property(nonatomic, readwrite) V2PAssetLog_OperateType operateType;

///操作发生的时间
@property(nonatomic, readwrite) int64_t operateTime;

///后台处理类型（支付、冻结、解冻）
@property(nonatomic, readwrite) int32_t soType;

///支付类型（通道）
@property(nonatomic, readwrite) int32_t payType;

///支付时间
@property(nonatomic, readwrite) int64_t payTime;

///所在的直播ID
@property(nonatomic, readwrite) int32_t videoId;

///所在的悬赏的ID
@property(nonatomic, readwrite) int32_t rewardId;

///申诉的内容
@property(nonatomic, readwrite, copy, null_resettable) NSString *appealDesc;

///申诉发生的时间
@property(nonatomic, readwrite) int64_t appealTime;

@end

/// Fetches the raw value of a @c V2PAssetLog's @c operateType property, even
/// if the value was not defined by the enum at the time the code was generated.
int32_t V2PAssetLog_OperateType_RawValue(V2PAssetLog *message);
/// Sets the raw value of an @c V2PAssetLog's @c operateType property, allowing
/// it to be set to a value that was not defined by the enum at the time the code
/// was generated.
void SetV2PAssetLog_OperateType_RawValue(V2PAssetLog *message, int32_t value);

#pragma mark - V2PServerBean

typedef GPB_ENUM(V2PServerBean_FieldNumber) {
  V2PServerBean_FieldNumber_ServerId = 1,
  V2PServerBean_FieldNumber_AddrZk = 2,
  V2PServerBean_FieldNumber_AddrBuffer = 3,
  V2PServerBean_FieldNumber_AddrWeb = 4,
  V2PServerBean_FieldNumber_Add = 5,
};

///服务器数量变化的通知类
@interface V2PServerBean : GPBMessage

///zk的服务器编号,客户端无需处理
@property(nonatomic, readwrite) int32_t serverId;

///ZK服务器的IP:端口,客户端无需处理
@property(nonatomic, readwrite, copy, null_resettable) NSString *addrZk;

///buffer服务器的IP:端口
@property(nonatomic, readwrite, copy, null_resettable) NSString *addrBuffer;

///Web服务器的IP:端口
@property(nonatomic, readwrite, copy, null_resettable) NSString *addrWeb;

///新增服务器还是删除服务器
@property(nonatomic, readwrite) BOOL add;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
