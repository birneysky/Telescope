// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_GEN_VERSION != 30001
#error This file was generated by a different version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class V2PAssetLog;
@class V2PData;
@class V2PGift;
@class V2PGratuity;
@class V2PPosition;
@class V2PResult;
@class V2PReward;
@class V2PUser;
@class V2PUserState;
@class V2PVideo;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum V2PPacket_type

///枚举。包类型
typedef GPB_ENUM(V2PPacket_type) {
  ///信令类型
  V2PPacket_type_Iq = 0,

  ///消息类型
  V2PPacket_type_Msg = 1,

  ///流媒体文件类型
  V2PPacket_type_Buffer = 2,

  ///心跳包
  V2PPacket_type_Beat = 3,
};

GPBEnumDescriptor *V2PPacket_type_EnumDescriptor(void);

/// Checks to see if the given value is defined by the enum or was not known at
/// the time this source was generated.
BOOL V2PPacket_type_IsValidValue(int32_t value);

#pragma mark - Enum V2PGratuity_Answer

///枚举。响应结果
typedef GPB_ENUM(V2PGratuity_Answer) {
  ///收到信息
  V2PGratuity_Answer_Receive = 0,

  ///接受
  V2PGratuity_Answer_Accept = 1,

  ///拒绝
  V2PGratuity_Answer_Refuse = 2,

  ///取消
  V2PGratuity_Answer_Cancel = 3,
};

GPBEnumDescriptor *V2PGratuity_Answer_EnumDescriptor(void);

/// Checks to see if the given value is defined by the enum or was not known at
/// the time this source was generated.
BOOL V2PGratuity_Answer_IsValidValue(int32_t value);

#pragma mark - Enum V2PReward_Operate

///枚举。操作类型
typedef GPB_ENUM(V2PReward_Operate) {
  ///发布悬赏
  V2PReward_Operate_Release = 0,

  ///取消悬赏
  V2PReward_Operate_Cancle = 1,

  ///支付
  V2PReward_Operate_Pay = 2,

  ///接受
  V2PReward_Operate_Answer = 3,

  ///申诉
  V2PReward_Operate_Appeal = 4,
};

GPBEnumDescriptor *V2PReward_Operate_EnumDescriptor(void);

/// Checks to see if the given value is defined by the enum or was not known at
/// the time this source was generated.
BOOL V2PReward_Operate_IsValidValue(int32_t value);

#pragma mark - Enum V2PUserState_State

///枚举。用户状态
typedef GPB_ENUM(V2PUserState_State) {
  ///在线
  V2PUserState_State_Online = 0,

  ///离线
  V2PUserState_State_Offline = 1,

  ///视频通话中
  V2PUserState_State_P2PVideo = 2,

  ///多人视频中
  V2PUserState_State_MultiVideo = 3,

  ///其他状态
  V2PUserState_State_Other = 4,
};

GPBEnumDescriptor *V2PUserState_State_EnumDescriptor(void);

/// Checks to see if the given value is defined by the enum or was not known at
/// the time this source was generated.
BOOL V2PUserState_State_IsValidValue(int32_t value);

#pragma mark - Enum V2PAssetLog_OperateType

///枚举。查询类型
typedef GPB_ENUM(V2PAssetLog_OperateType) {
  ///充值
  V2PAssetLog_OperateType_Recharge = 0,

  ///提现
  V2PAssetLog_OperateType_Cash = 1,

  ///打赏
  V2PAssetLog_OperateType_Gratuity = 2,

  ///悬赏
  V2PAssetLog_OperateType_Reward = 3,

  ///所有
  V2PAssetLog_OperateType_All = 4,

  ///入账
  V2PAssetLog_OperateType_Income = 5,

  ///出账
  V2PAssetLog_OperateType_Payout = 6,
};

GPBEnumDescriptor *V2PAssetLog_OperateType_EnumDescriptor(void);

/// Checks to see if the given value is defined by the enum or was not known at
/// the time this source was generated.
BOOL V2PAssetLog_OperateType_IsValidValue(int32_t value);

#pragma mark - V2PMessageRoot

/// Exposes the extension registry for this file.
///
/// The base class provides:
/// @code
///   + (GPBExtensionRegistry *)extensionRegistry;
/// @endcode
/// which is a @c GPBExtensionRegistry that includes all the extensions defined by
/// this file and all files that it depends on.
@interface V2PMessageRoot : GPBRootObject
@end

#pragma mark - V2PPacket

typedef GPB_ENUM(V2PPacket_FieldNumber) {
  V2PPacket_FieldNumber_PacketType = 1,
  V2PPacket_FieldNumber_From = 2,
  V2PPacket_FieldNumber_To = 3,
  V2PPacket_FieldNumber_Id_p = 4,
  V2PPacket_FieldNumber_Method = 5,
  V2PPacket_FieldNumber_OperateType = 6,
  V2PPacket_FieldNumber_Result = 7,
  V2PPacket_FieldNumber_Data_p = 8,
  V2PPacket_FieldNumber_Version = 9,
};

///协议主体类
@interface V2PPacket : GPBMessage

///（必填）包类型：枚举
@property(nonatomic, readwrite) V2PPacket_type packetType;

@property(nonatomic, readwrite) BOOL hasPacketType;
///（选填）发送者
@property(nonatomic, readwrite, copy, null_resettable) NSString *from;
/// Test to see if @c from has been set.
@property(nonatomic, readwrite) BOOL hasFrom;

///（选填）接收者
@property(nonatomic, readwrite, copy, null_resettable) NSString *to;
/// Test to see if @c to has been set.
@property(nonatomic, readwrite) BOOL hasTo;

///（选填）包ID
@property(nonatomic, readwrite, copy, null_resettable) NSString *id_p;
/// Test to see if @c id_p has been set.
@property(nonatomic, readwrite) BOOL hasId_p;

///（选填）方法名
@property(nonatomic, readwrite, copy, null_resettable) NSString *method;
/// Test to see if @c method has been set.
@property(nonatomic, readwrite) BOOL hasMethod;

///（选填）操作类型
@property(nonatomic, readwrite, copy, null_resettable) NSString *operateType;
/// Test to see if @c operateType has been set.
@property(nonatomic, readwrite) BOOL hasOperateType;

///（选填）操作结果，是否成功，失败原因
@property(nonatomic, readwrite, strong, null_resettable) V2PResult *result;
/// Test to see if @c result has been set.
@property(nonatomic, readwrite) BOOL hasResult;

///（选填）包含的数据
@property(nonatomic, readwrite, strong, null_resettable) V2PData *data_p;
/// Test to see if @c data_p has been set.
@property(nonatomic, readwrite) BOOL hasData_p;

///（选填）版本号iq类型包必填
@property(nonatomic, readwrite, copy, null_resettable) NSString *version;
/// Test to see if @c version has been set.
@property(nonatomic, readwrite) BOOL hasVersion;

@end

#pragma mark - V2PResult

typedef GPB_ENUM(V2PResult_FieldNumber) {
  V2PResult_FieldNumber_Result = 1,
  V2PResult_FieldNumber_Error = 2,
};

///操作结果类
@interface V2PResult : GPBMessage

///是否成功
@property(nonatomic, readwrite) BOOL result;

@property(nonatomic, readwrite) BOOL hasResult;
///错误信息
@property(nonatomic, readwrite, copy, null_resettable) NSString *error;
/// Test to see if @c error has been set.
@property(nonatomic, readwrite) BOOL hasError;

@end

#pragma mark - V2PData

typedef GPB_ENUM(V2PData_FieldNumber) {
  V2PData_FieldNumber_Normal = 1,
  V2PData_FieldNumber_ByteDate = 2,
  V2PData_FieldNumber_FromTime = 3,
  V2PData_FieldNumber_ToTime = 4,
  V2PData_FieldNumber_Sum = 5,
  V2PData_FieldNumber_From = 6,
  V2PData_FieldNumber_To = 7,
  V2PData_FieldNumber_PositionArray = 8,
  V2PData_FieldNumber_UserArray = 9,
  V2PData_FieldNumber_VideoArray = 10,
  V2PData_FieldNumber_GratuityArray = 11,
  V2PData_FieldNumber_RewardArray = 12,
  V2PData_FieldNumber_UserStateArray = 13,
  V2PData_FieldNumber_AssetLogArray = 14,
};

///数据类
@interface V2PData : GPBMessage

///（选填）通用数据
@property(nonatomic, readwrite, copy, null_resettable) NSString *normal;
/// Test to see if @c normal has been set.
@property(nonatomic, readwrite) BOOL hasNormal;

///（选填）二进制数据
@property(nonatomic, readwrite, copy, null_resettable) NSData *byteDate;
/// Test to see if @c byteDate has been set.
@property(nonatomic, readwrite) BOOL hasByteDate;

///（选填）筛选数据的起始时间
@property(nonatomic, readwrite) int64_t fromTime;

@property(nonatomic, readwrite) BOOL hasFromTime;
///（选填）筛选数据的截止时间
@property(nonatomic, readwrite) int64_t toTime;

@property(nonatomic, readwrite) BOOL hasToTime;
///（选填）数据的总量
@property(nonatomic, readwrite) int32_t sum;

@property(nonatomic, readwrite) BOOL hasSum;
///（选填）当前传送数据的起始位置
@property(nonatomic, readwrite) int32_t from;

@property(nonatomic, readwrite) BOOL hasFrom;
///（选填）当前传送数据的结束位置
@property(nonatomic, readwrite) int32_t to;

@property(nonatomic, readwrite) BOOL hasTo;
///（可重复）位置类
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<V2PPosition*> *positionArray;
/// The number of items in @c positionArray without causing the array to be created.
@property(nonatomic, readonly) NSUInteger positionArray_Count;

///（可重复）用户类
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<V2PUser*> *userArray;
/// The number of items in @c userArray without causing the array to be created.
@property(nonatomic, readonly) NSUInteger userArray_Count;

///（可重复）直播视频类
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<V2PVideo*> *videoArray;
/// The number of items in @c videoArray without causing the array to be created.
@property(nonatomic, readonly) NSUInteger videoArray_Count;

///（可重复）打赏类
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<V2PGratuity*> *gratuityArray;
/// The number of items in @c gratuityArray without causing the array to be created.
@property(nonatomic, readonly) NSUInteger gratuityArray_Count;

///（可重复）悬赏类
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<V2PReward*> *rewardArray;
/// The number of items in @c rewardArray without causing the array to be created.
@property(nonatomic, readonly) NSUInteger rewardArray_Count;

///（可重复）用户状态
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<V2PUserState*> *userStateArray;
/// The number of items in @c userStateArray without causing the array to be created.
@property(nonatomic, readonly) NSUInteger userStateArray_Count;

///（可重复）资金变动的日志类
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<V2PAssetLog*> *assetLogArray;
/// The number of items in @c assetLogArray without causing the array to be created.
@property(nonatomic, readonly) NSUInteger assetLogArray_Count;

@end

#pragma mark - V2PUser

typedef GPB_ENUM(V2PUser_FieldNumber) {
  V2PUser_FieldNumber_Id_p = 1,
  V2PUser_FieldNumber_Phone = 2,
  V2PUser_FieldNumber_Name = 3,
  V2PUser_FieldNumber_Pwd = 4,
  V2PUser_FieldNumber_Pwd2OrCode = 5,
  V2PUser_FieldNumber_RealName = 6,
  V2PUser_FieldNumber_Headurl = 7,
  V2PUser_FieldNumber_SignText = 8,
  V2PUser_FieldNumber_Sex = 9,
  V2PUser_FieldNumber_Address = 10,
  V2PUser_FieldNumber_Experience = 11,
  V2PUser_FieldNumber_FansCount = 12,
  V2PUser_FieldNumber_FollowCount = 13,
  V2PUser_FieldNumber_Position = 14,
  V2PUser_FieldNumber_DeviceId = 15,
  V2PUser_FieldNumber_FollowType = 16,
  V2PUser_FieldNumber_DescName = 17,
  V2PUser_FieldNumber_V2Id = 18,
  V2PUser_FieldNumber_V2UserName = 19,
  V2PUser_FieldNumber_V2Pwd = 20,
  V2PUser_FieldNumber_VideoCount = 21,
  V2PUser_FieldNumber_V2DeviceId1 = 22,
  V2PUser_FieldNumber_V2DeviceId2 = 23,
};

///用户类
@interface V2PUser : GPBMessage

///（选填）用户ID
@property(nonatomic, readwrite) int32_t id_p;

@property(nonatomic, readwrite) BOOL hasId_p;
///（选填）电话号码
@property(nonatomic, readwrite, copy, null_resettable) NSString *phone;
/// Test to see if @c phone has been set.
@property(nonatomic, readwrite) BOOL hasPhone;

///（选填）用户名/昵称
@property(nonatomic, readwrite, copy, null_resettable) NSString *name;
/// Test to see if @c name has been set.
@property(nonatomic, readwrite) BOOL hasName;

///（选填）用户密码
@property(nonatomic, readwrite, copy, null_resettable) NSString *pwd;
/// Test to see if @c pwd has been set.
@property(nonatomic, readwrite) BOOL hasPwd;

///（选填）新密码或者验证码
@property(nonatomic, readwrite, copy, null_resettable) NSString *pwd2OrCode;
/// Test to see if @c pwd2OrCode has been set.
@property(nonatomic, readwrite) BOOL hasPwd2OrCode;

///（选填）用户真实姓名
@property(nonatomic, readwrite, copy, null_resettable) NSString *realName;
/// Test to see if @c realName has been set.
@property(nonatomic, readwrite) BOOL hasRealName;

///（选填）用户头像地址
@property(nonatomic, readwrite, copy, null_resettable) NSString *headurl;
/// Test to see if @c headurl has been set.
@property(nonatomic, readwrite) BOOL hasHeadurl;

///（选填）个性化签名
@property(nonatomic, readwrite, copy, null_resettable) NSString *signText;
/// Test to see if @c signText has been set.
@property(nonatomic, readwrite) BOOL hasSignText;

///（选填）性别
@property(nonatomic, readwrite) int32_t sex;

@property(nonatomic, readwrite) BOOL hasSex;
///（选填）注册地址
@property(nonatomic, readwrite, copy, null_resettable) NSString *address;
/// Test to see if @c address has been set.
@property(nonatomic, readwrite) BOOL hasAddress;

///（选填）用户经验值
@property(nonatomic, readwrite) int32_t experience;

@property(nonatomic, readwrite) BOOL hasExperience;
///（选填）粉丝数量
@property(nonatomic, readwrite) int32_t fansCount;

@property(nonatomic, readwrite) BOOL hasFansCount;
///（选填）关注的用户数量
@property(nonatomic, readwrite) int32_t followCount;

@property(nonatomic, readwrite) BOOL hasFollowCount;
///（选填）用户所在的位置
@property(nonatomic, readwrite, strong, null_resettable) V2PPosition *position;
/// Test to see if @c position has been set.
@property(nonatomic, readwrite) BOOL hasPosition;

///（选填）登陆所用的设备ID
@property(nonatomic, readwrite, copy, null_resettable) NSString *deviceId;
/// Test to see if @c deviceId has been set.
@property(nonatomic, readwrite) BOOL hasDeviceId;

///（选填）关注（其他用户）的类型
@property(nonatomic, readwrite) int32_t followType;

@property(nonatomic, readwrite) BOOL hasFollowType;
///（选填）备注名称
@property(nonatomic, readwrite, copy, null_resettable) NSString *descName;
/// Test to see if @c descName has been set.
@property(nonatomic, readwrite) BOOL hasDescName;

///（选填）会议系统用户ID
@property(nonatomic, readwrite, copy, null_resettable) NSString *v2Id;
/// Test to see if @c v2Id has been set.
@property(nonatomic, readwrite) BOOL hasV2Id;

///（选填）会议系统用户名
@property(nonatomic, readwrite, copy, null_resettable) NSString *v2UserName;
/// Test to see if @c v2UserName has been set.
@property(nonatomic, readwrite) BOOL hasV2UserName;

///（选填）会议系统用户密码
@property(nonatomic, readwrite, copy, null_resettable) NSString *v2Pwd;
/// Test to see if @c v2Pwd has been set.
@property(nonatomic, readwrite) BOOL hasV2Pwd;

///（选填）用户发布的直播总量
@property(nonatomic, readwrite) int32_t videoCount;

@property(nonatomic, readwrite) BOOL hasVideoCount;
///（选填）前置摄像头ID
@property(nonatomic, readwrite, copy, null_resettable) NSString *v2DeviceId1;
/// Test to see if @c v2DeviceId1 has been set.
@property(nonatomic, readwrite) BOOL hasV2DeviceId1;

///（选填）后置摄像头ID
@property(nonatomic, readwrite, copy, null_resettable) NSString *v2DeviceId2;
/// Test to see if @c v2DeviceId2 has been set.
@property(nonatomic, readwrite) BOOL hasV2DeviceId2;

@end

#pragma mark - V2PPosition

typedef GPB_ENUM(V2PPosition_FieldNumber) {
  V2PPosition_FieldNumber_Longitude = 1,
  V2PPosition_FieldNumber_Latitude = 2,
  V2PPosition_FieldNumber_Radius = 3,
};

///位置类
@interface V2PPosition : GPBMessage

///（选填）地图经度
@property(nonatomic, readwrite) double longitude;

@property(nonatomic, readwrite) BOOL hasLongitude;
///（选填）地图维度
@property(nonatomic, readwrite) double latitude;

@property(nonatomic, readwrite) BOOL hasLatitude;
///（选填）查询半径,以米为单位
@property(nonatomic, readwrite) int32_t radius;

@property(nonatomic, readwrite) BOOL hasRadius;
@end

#pragma mark - V2PVideo

typedef GPB_ENUM(V2PVideo_FieldNumber) {
  V2PVideo_FieldNumber_Id_p = 1,
  V2PVideo_FieldNumber_VideoNum = 2,
  V2PVideo_FieldNumber_UserId = 3,
  V2PVideo_FieldNumber_Position = 4,
  V2PVideo_FieldNumber_Sum = 5,
  V2PVideo_FieldNumber_UserCount = 6,
  V2PVideo_FieldNumber_LikeCount = 7,
  V2PVideo_FieldNumber_GratuityCount = 8,
  V2PVideo_FieldNumber_Degree = 9,
  V2PVideo_FieldNumber_ResultType = 10,
  V2PVideo_FieldNumber_Hlsmode = 11,
  V2PVideo_FieldNumber_VideoPwd = 12,
};

///直播视频类
@interface V2PVideo : GPBMessage

///（选填）直播的ID
@property(nonatomic, readwrite) int32_t id_p;

@property(nonatomic, readwrite) BOOL hasId_p;
///（选填）直播的会议号
@property(nonatomic, readwrite, copy, null_resettable) NSString *videoNum;
/// Test to see if @c videoNum has been set.
@property(nonatomic, readwrite) BOOL hasVideoNum;

///（选填）发起直播的用户ID
@property(nonatomic, readwrite) int32_t userId;

@property(nonatomic, readwrite) BOOL hasUserId;
///（选填）该直播所在的位置
@property(nonatomic, readwrite, strong, null_resettable) V2PPosition *position;
/// Test to see if @c position has been set.
@property(nonatomic, readwrite) BOOL hasPosition;

///（选填）当前观看该直播的总人数
@property(nonatomic, readwrite) int32_t sum;

@property(nonatomic, readwrite) BOOL hasSum;
///（选填）累计观看人次
@property(nonatomic, readwrite) int32_t userCount;

@property(nonatomic, readwrite) BOOL hasUserCount;
///（选填）当前的点赞数
@property(nonatomic, readwrite) int32_t likeCount;

@property(nonatomic, readwrite) BOOL hasLikeCount;
///（选填）当前直播的打赏总额
@property(nonatomic, readwrite) float gratuityCount;

@property(nonatomic, readwrite) BOOL hasGratuityCount;
///与该用户的相关度，排序依据
@property(nonatomic, readwrite) int32_t degree;

@property(nonatomic, readwrite) BOOL hasDegree;
///结果类型：0搜索内容；1推荐内容
@property(nonatomic, readwrite) int32_t resultType;

@property(nonatomic, readwrite) BOOL hasResultType;
///是否为HLS格式
@property(nonatomic, readwrite) BOOL hlsmode;

@property(nonatomic, readwrite) BOOL hasHlsmode;
///直播的密码，默认为null
@property(nonatomic, readwrite, copy, null_resettable) NSString *videoPwd;
/// Test to see if @c videoPwd has been set.
@property(nonatomic, readwrite) BOOL hasVideoPwd;

@end

#pragma mark - V2PGratuity

typedef GPB_ENUM(V2PGratuity_FieldNumber) {
  V2PGratuity_FieldNumber_GiftType = 1,
  V2PGratuity_FieldNumber_ToUserId = 2,
  V2PGratuity_FieldNumber_FromUserId = 3,
  V2PGratuity_FieldNumber_Amount = 4,
  V2PGratuity_FieldNumber_SumOrRemain = 5,
  V2PGratuity_FieldNumber_Answer = 6,
  V2PGratuity_FieldNumber_VideoId = 7,
};

///打赏类
@interface V2PGratuity : GPBMessage

///（选填）打赏物的类型
@property(nonatomic, readwrite) int32_t giftType;

@property(nonatomic, readwrite) BOOL hasGiftType;
///（选填）打赏的对象
@property(nonatomic, readwrite) int32_t toUserId;

@property(nonatomic, readwrite) BOOL hasToUserId;
///（选填）发起打赏的用户
@property(nonatomic, readwrite) int32_t fromUserId;

@property(nonatomic, readwrite) BOOL hasFromUserId;
///（选填）打赏金额
@property(nonatomic, readwrite) float amount;

@property(nonatomic, readwrite) BOOL hasAmount;
///累计打赏总额或者打赏后的剩余金额
@property(nonatomic, readwrite) float sumOrRemain;

@property(nonatomic, readwrite) BOOL hasSumOrRemain;
///（选填）枚举类。响应结果
@property(nonatomic, readwrite) V2PGratuity_Answer answer;

@property(nonatomic, readwrite) BOOL hasAnswer;
///（选填）打赏行为发生的那个直播
@property(nonatomic, readwrite) int32_t videoId;

@property(nonatomic, readwrite) BOOL hasVideoId;
@end

#pragma mark - V2PReward

typedef GPB_ENUM(V2PReward_FieldNumber) {
  V2PReward_FieldNumber_Id_p = 1,
  V2PReward_FieldNumber_PowerTime = 2,
  V2PReward_FieldNumber_ReleaseTime = 3,
  V2PReward_FieldNumber_GiftArray = 4,
  V2PReward_FieldNumber_FromUserId = 5,
  V2PReward_FieldNumber_AnswerUserId = 6,
  V2PReward_FieldNumber_Operate = 7,
  V2PReward_FieldNumber_Desc = 8,
  V2PReward_FieldNumber_Position = 9,
  V2PReward_FieldNumber_PushSum = 10,
  V2PReward_FieldNumber_AppealDesc = 11,
  V2PReward_FieldNumber_AppealTime = 12,
};

///悬赏类
@interface V2PReward : GPBMessage

///（选填）此次悬赏的数据库ID
@property(nonatomic, readwrite) int32_t id_p;

@property(nonatomic, readwrite) BOOL hasId_p;
///（选填）悬赏的有效时间
@property(nonatomic, readwrite) int32_t powerTime;

@property(nonatomic, readwrite) BOOL hasPowerTime;
///（选填）悬赏的开始时间
@property(nonatomic, readwrite) int64_t releaseTime;

@property(nonatomic, readwrite) BOOL hasReleaseTime;
///（选填）悬赏的物品及数量，可以是多种
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<V2PGift*> *giftArray;
/// The number of items in @c giftArray without causing the array to be created.
@property(nonatomic, readonly) NSUInteger giftArray_Count;

///（选填）发起悬赏用户的ID
@property(nonatomic, readwrite) int32_t fromUserId;

@property(nonatomic, readwrite) BOOL hasFromUserId;
///（选填）接受悬赏用户的ID
@property(nonatomic, readwrite) int32_t answerUserId;

@property(nonatomic, readwrite) BOOL hasAnswerUserId;
///（选填）枚举类。操作类型
@property(nonatomic, readwrite) V2PReward_Operate operate;

@property(nonatomic, readwrite) BOOL hasOperate;
///（选填）文字描述
@property(nonatomic, readwrite, copy, null_resettable) NSString *desc;
/// Test to see if @c desc has been set.
@property(nonatomic, readwrite) BOOL hasDesc;

///（选填）位置信息
@property(nonatomic, readwrite, strong, null_resettable) V2PPosition *position;
/// Test to see if @c position has been set.
@property(nonatomic, readwrite) BOOL hasPosition;

///（选填）推送的用户数量
@property(nonatomic, readwrite) int32_t pushSum;

@property(nonatomic, readwrite) BOOL hasPushSum;
///（选填）申诉的内容
@property(nonatomic, readwrite, copy, null_resettable) NSString *appealDesc;
/// Test to see if @c appealDesc has been set.
@property(nonatomic, readwrite) BOOL hasAppealDesc;

///（选填）申诉的时间
@property(nonatomic, readwrite) int64_t appealTime;

@property(nonatomic, readwrite) BOOL hasAppealTime;
@end

#pragma mark - V2PGift

typedef GPB_ENUM(V2PGift_FieldNumber) {
  V2PGift_FieldNumber_GiftType = 1,
  V2PGift_FieldNumber_Amount = 2,
  V2PGift_FieldNumber_SumOrRemain = 3,
};

///礼物类
@interface V2PGift : GPBMessage

///（选填）类别
@property(nonatomic, readwrite) int32_t giftType;

@property(nonatomic, readwrite) BOOL hasGiftType;
///（选填）数量
@property(nonatomic, readwrite) float amount;

@property(nonatomic, readwrite) BOOL hasAmount;
///（选填）悬赏/打赏量，或者剩余量
@property(nonatomic, readwrite) float sumOrRemain;

@property(nonatomic, readwrite) BOOL hasSumOrRemain;
@end

#pragma mark - V2PUserState

typedef GPB_ENUM(V2PUserState_FieldNumber) {
  V2PUserState_FieldNumber_UserId = 1,
  V2PUserState_FieldNumber_OperateId = 2,
  V2PUserState_FieldNumber_State = 3,
  V2PUserState_FieldNumber_Desc = 4,
};

///用户状态通报类
@interface V2PUserState : GPBMessage

///（选填）用户ID
@property(nonatomic, readwrite) int32_t userId;

@property(nonatomic, readwrite) BOOL hasUserId;
///（选填）操作ID（悬赏或者其他ID）
@property(nonatomic, readwrite) int32_t operateId;

@property(nonatomic, readwrite) BOOL hasOperateId;
///（枚举）当前状态
@property(nonatomic, readwrite) V2PUserState_State state;

@property(nonatomic, readwrite) BOOL hasState;
///（选填）说明（报告原由）
@property(nonatomic, readwrite, copy, null_resettable) NSString *desc;
/// Test to see if @c desc has been set.
@property(nonatomic, readwrite) BOOL hasDesc;

@end

#pragma mark - V2PAssetLog

typedef GPB_ENUM(V2PAssetLog_FieldNumber) {
  V2PAssetLog_FieldNumber_FromUserId = 1,
  V2PAssetLog_FieldNumber_ToUserId = 2,
  V2PAssetLog_FieldNumber_GiftArray = 3,
  V2PAssetLog_FieldNumber_Desc = 4,
  V2PAssetLog_FieldNumber_OperateType = 5,
  V2PAssetLog_FieldNumber_OperateTime = 6,
  V2PAssetLog_FieldNumber_SoType = 7,
  V2PAssetLog_FieldNumber_PayType = 8,
  V2PAssetLog_FieldNumber_PayTime = 9,
  V2PAssetLog_FieldNumber_VideoId = 10,
  V2PAssetLog_FieldNumber_RewardId = 11,
  V2PAssetLog_FieldNumber_AppealDesc = 12,
  V2PAssetLog_FieldNumber_AppealTime = 13,
};

///资金变动的日志类
@interface V2PAssetLog : GPBMessage

///（选填）资金流出的用户ID
@property(nonatomic, readwrite) int32_t fromUserId;

@property(nonatomic, readwrite) BOOL hasFromUserId;
///（选填）资金流入的用户ID
@property(nonatomic, readwrite) int32_t toUserId;

@property(nonatomic, readwrite) BOOL hasToUserId;
///（可重复）涉及的资产类
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<V2PGift*> *giftArray;
/// The number of items in @c giftArray without causing the array to be created.
@property(nonatomic, readonly) NSUInteger giftArray_Count;

///（选填）文本说明
@property(nonatomic, readwrite, copy, null_resettable) NSString *desc;
/// Test to see if @c desc has been set.
@property(nonatomic, readwrite) BOOL hasDesc;

///（选填）枚举，查询类型
@property(nonatomic, readwrite) V2PAssetLog_OperateType operateType;

@property(nonatomic, readwrite) BOOL hasOperateType;
///（选填）操作发生的时间
@property(nonatomic, readwrite) int64_t operateTime;

@property(nonatomic, readwrite) BOOL hasOperateTime;
///（选填）后台处理类型（支付、冻结、解冻）
@property(nonatomic, readwrite) int32_t soType;

@property(nonatomic, readwrite) BOOL hasSoType;
///（选填）支付类型（通道）
@property(nonatomic, readwrite) int32_t payType;

@property(nonatomic, readwrite) BOOL hasPayType;
///（选填）支付时间
@property(nonatomic, readwrite) int64_t payTime;

@property(nonatomic, readwrite) BOOL hasPayTime;
///（选填）所在的直播ID
@property(nonatomic, readwrite) int32_t videoId;

@property(nonatomic, readwrite) BOOL hasVideoId;
///（选填）所在的悬赏的ID
@property(nonatomic, readwrite) int32_t rewardId;

@property(nonatomic, readwrite) BOOL hasRewardId;
///（选填）申诉的内容
@property(nonatomic, readwrite, copy, null_resettable) NSString *appealDesc;
/// Test to see if @c appealDesc has been set.
@property(nonatomic, readwrite) BOOL hasAppealDesc;

///（选填）申诉发生的时间
@property(nonatomic, readwrite) int64_t appealTime;

@property(nonatomic, readwrite) BOOL hasAppealTime;
@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
